//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.09.19 at 02:44:33 PM IST 
//


package org.xbrl._2003.instance;

import java.math.BigDecimal;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.xbrl._2003.instance package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Item_QNAME = new QName("http://www.xbrl.org/2003/instance", "item");
    private final static QName _Tuple_QNAME = new QName("http://www.xbrl.org/2003/instance", "tuple");
    private final static QName _Numerator_QNAME = new QName("http://www.xbrl.org/2003/instance", "numerator");
    private final static QName _Denominator_QNAME = new QName("http://www.xbrl.org/2003/instance", "denominator");
    private final static QName _Measure_QNAME = new QName("http://www.xbrl.org/2003/instance", "measure");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.xbrl._2003.instance
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MonetaryItemType }
     * 
     */
    public MonetaryItemType createMonetaryItemType() {
        return new MonetaryItemType();
    }

    /**
     * Create an instance of {@link ContextEntityType.Identifier }
     * 
     */
    public ContextEntityType.Identifier createContextEntityTypeIdentifier() {
        return new ContextEntityType.Identifier();
    }

    /**
     * Create an instance of {@link DateItemType }
     * 
     */
    public DateItemType createDateItemType() {
        return new DateItemType();
    }

    /**
     * Create an instance of {@link GYearMonthItemType }
     * 
     */
    public GYearMonthItemType createGYearMonthItemType() {
        return new GYearMonthItemType();
    }

    /**
     * Create an instance of {@link IntegerItemType }
     * 
     */
    public IntegerItemType createIntegerItemType() {
        return new IntegerItemType();
    }

    /**
     * Create an instance of {@link TimeItemType }
     * 
     */
    public TimeItemType createTimeItemType() {
        return new TimeItemType();
    }

    /**
     * Create an instance of {@link IntItemType }
     * 
     */
    public IntItemType createIntItemType() {
        return new IntItemType();
    }

    /**
     * Create an instance of {@link GDayItemType }
     * 
     */
    public GDayItemType createGDayItemType() {
        return new GDayItemType();
    }

    /**
     * Create an instance of {@link DoubleItemType }
     * 
     */
    public DoubleItemType createDoubleItemType() {
        return new DoubleItemType();
    }

    /**
     * Create an instance of {@link UnsignedLongItemType }
     * 
     */
    public UnsignedLongItemType createUnsignedLongItemType() {
        return new UnsignedLongItemType();
    }

    /**
     * Create an instance of {@link NonNegativeIntegerItemType }
     * 
     */
    public NonNegativeIntegerItemType createNonNegativeIntegerItemType() {
        return new NonNegativeIntegerItemType();
    }

    /**
     * Create an instance of {@link NonPositiveIntegerItemType }
     * 
     */
    public NonPositiveIntegerItemType createNonPositiveIntegerItemType() {
        return new NonPositiveIntegerItemType();
    }

    /**
     * Create an instance of {@link TokenItemType }
     * 
     */
    public TokenItemType createTokenItemType() {
        return new TokenItemType();
    }

    /**
     * Create an instance of {@link ContextPeriodType }
     * 
     */
    public ContextPeriodType createContextPeriodType() {
        return new ContextPeriodType();
    }

    /**
     * Create an instance of {@link NormalizedStringItemType }
     * 
     */
    public NormalizedStringItemType createNormalizedStringItemType() {
        return new NormalizedStringItemType();
    }

    /**
     * Create an instance of {@link PureItemType }
     * 
     */
    public PureItemType createPureItemType() {
        return new PureItemType();
    }

    /**
     * Create an instance of {@link UnsignedIntItemType }
     * 
     */
    public UnsignedIntItemType createUnsignedIntItemType() {
        return new UnsignedIntItemType();
    }

    /**
     * Create an instance of {@link QNameItemType }
     * 
     */
    public QNameItemType createQNameItemType() {
        return new QNameItemType();
    }

    /**
     * Create an instance of {@link NameItemType }
     * 
     */
    public NameItemType createNameItemType() {
        return new NameItemType();
    }

    /**
     * Create an instance of {@link ShortItemType }
     * 
     */
    public ShortItemType createShortItemType() {
        return new ShortItemType();
    }

    /**
     * Create an instance of {@link MeasuresType }
     * 
     */
    public MeasuresType createMeasuresType() {
        return new MeasuresType();
    }

    /**
     * Create an instance of {@link NegativeIntegerItemType }
     * 
     */
    public NegativeIntegerItemType createNegativeIntegerItemType() {
        return new NegativeIntegerItemType();
    }

    /**
     * Create an instance of {@link DateTimeItemType }
     * 
     */
    public DateTimeItemType createDateTimeItemType() {
        return new DateTimeItemType();
    }

    /**
     * Create an instance of {@link UnsignedShortItemType }
     * 
     */
    public UnsignedShortItemType createUnsignedShortItemType() {
        return new UnsignedShortItemType();
    }

    /**
     * Create an instance of {@link StringItemType }
     * 
     */
    public StringItemType createStringItemType() {
        return new StringItemType();
    }

    /**
     * Create an instance of {@link Divide }
     * 
     */
    public Divide createDivide() {
        return new Divide();
    }

    /**
     * Create an instance of {@link ContextPeriodType.Forever }
     * 
     */
    public ContextPeriodType.Forever createContextPeriodTypeForever() {
        return new ContextPeriodType.Forever();
    }

    /**
     * Create an instance of {@link Unit }
     * 
     */
    public Unit createUnit() {
        return new Unit();
    }

    /**
     * Create an instance of {@link NCNameItemType }
     * 
     */
    public NCNameItemType createNCNameItemType() {
        return new NCNameItemType();
    }

    /**
     * Create an instance of {@link Base64BinaryItemType }
     * 
     */
    public Base64BinaryItemType createBase64BinaryItemType() {
        return new Base64BinaryItemType();
    }

    /**
     * Create an instance of {@link Context }
     * 
     */
    public Context createContext() {
        return new Context();
    }

    /**
     * Create an instance of {@link ContextEntityType }
     * 
     */
    public ContextEntityType createContextEntityType() {
        return new ContextEntityType();
    }

    /**
     * Create an instance of {@link DurationItemType }
     * 
     */
    public DurationItemType createDurationItemType() {
        return new DurationItemType();
    }

    /**
     * Create an instance of {@link LanguageItemType }
     * 
     */
    public LanguageItemType createLanguageItemType() {
        return new LanguageItemType();
    }

    /**
     * Create an instance of {@link UnsignedByteItemType }
     * 
     */
    public UnsignedByteItemType createUnsignedByteItemType() {
        return new UnsignedByteItemType();
    }

    /**
     * Create an instance of {@link FloatItemType }
     * 
     */
    public FloatItemType createFloatItemType() {
        return new FloatItemType();
    }

    /**
     * Create an instance of {@link GMonthItemType }
     * 
     */
    public GMonthItemType createGMonthItemType() {
        return new GMonthItemType();
    }

    /**
     * Create an instance of {@link BooleanItemType }
     * 
     */
    public BooleanItemType createBooleanItemType() {
        return new BooleanItemType();
    }

    /**
     * Create an instance of {@link Segment }
     * 
     */
    public Segment createSegment() {
        return new Segment();
    }

    /**
     * Create an instance of {@link ContextScenarioType }
     * 
     */
    public ContextScenarioType createContextScenarioType() {
        return new ContextScenarioType();
    }

    /**
     * Create an instance of {@link ByteItemType }
     * 
     */
    public ByteItemType createByteItemType() {
        return new ByteItemType();
    }

    /**
     * Create an instance of {@link PositiveIntegerItemType }
     * 
     */
    public PositiveIntegerItemType createPositiveIntegerItemType() {
        return new PositiveIntegerItemType();
    }

    /**
     * Create an instance of {@link GMonthDayItemType }
     * 
     */
    public GMonthDayItemType createGMonthDayItemType() {
        return new GMonthDayItemType();
    }

    /**
     * Create an instance of {@link AnyURIItemType }
     * 
     */
    public AnyURIItemType createAnyURIItemType() {
        return new AnyURIItemType();
    }

    /**
     * Create an instance of {@link LongItemType }
     * 
     */
    public LongItemType createLongItemType() {
        return new LongItemType();
    }

    /**
     * Create an instance of {@link DecimalItemType }
     * 
     */
    public DecimalItemType createDecimalItemType() {
        return new DecimalItemType();
    }

    /**
     * Create an instance of {@link SharesItemType }
     * 
     */
    public SharesItemType createSharesItemType() {
        return new SharesItemType();
    }

    /**
     * Create an instance of {@link GYearItemType }
     * 
     */
    public GYearItemType createGYearItemType() {
        return new GYearItemType();
    }

    /**
     * Create an instance of {@link HexBinaryItemType }
     * 
     */
    public HexBinaryItemType createHexBinaryItemType() {
        return new HexBinaryItemType();
    }

    /**
     * Create an instance of {@link Xbrl }
     * 
     */
    public Xbrl createXbrl() {
        return new Xbrl();
    }

    /**
     * Create an instance of {@link FractionItemType }
     * 
     */
    public FractionItemType createFractionItemType() {
        return new FractionItemType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.xbrl.org/2003/instance", name = "item")
    public JAXBElement<Object> createItem(Object value) {
        return new JAXBElement<Object>(_Item_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.xbrl.org/2003/instance", name = "tuple")
    public JAXBElement<Object> createTuple(Object value) {
        return new JAXBElement<Object>(_Tuple_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigDecimal }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.xbrl.org/2003/instance", name = "numerator")
    public JAXBElement<BigDecimal> createNumerator(BigDecimal value) {
        return new JAXBElement<BigDecimal>(_Numerator_QNAME, BigDecimal.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.xbrl.org/2003/instance", name = "denominator")
    public JAXBElement<String> createDenominator(String value) {
        return new JAXBElement<String>(_Denominator_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QName }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.xbrl.org/2003/instance", name = "measure")
    public JAXBElement<QName> createMeasure(QName value) {
        return new JAXBElement<QName>(_Measure_QNAME, QName.class, null, value);
    }

}
